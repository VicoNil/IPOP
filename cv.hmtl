<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Curriculum - Nil Vico</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
            background-color: #3a3a3a; /* Fondo gris más claro */
            color: rgba(0, 255, 0, 0.6); /* Letras más opacas */
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            position: relative;
        }
        img {
            max-width: 100%;
            max-height: 100%;
        }
        .matrix {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }
        .matrix span {
            display: inline-block;
            position: absolute;
            top: -100px;
            animation: drop 4s infinite;
            color: #0F0;
            font-size: 16px;
        }
        @keyframes drop {
            to {
                transform: translateY(calc(100vh + 100px));
            }
        }
        @keyframes rise {
            from {
                transform: translateY(100vh);
            }
            to {
                transform: translateY(-100vh);
            }
        }
        .matrix.rise span {
            animation: rise 2s linear infinite; /* Ajustamos la velocidad a 2s y lo hacemos infinito */
        }
    </style>
</head>
<body>
    <img src="https://viconil.github.io/IPOP/cvnil.jpg" alt="Curriculum Vitae">
    <div class="matrix" id="matrix"></div>

    <script>
        function createMatrix() {
            const matrix = document.querySelector('.matrix');
            const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';
            const fontSize = 16;
            const columns = Math.floor(window.innerWidth / fontSize);

            while (matrix.firstChild) {
                matrix.removeChild(matrix.firstChild);
            }

            for (let i = 0; i < 300; i++) {
                const span = document.createElement('span');
                span.textContent = letters[Math.floor(Math.random() * letters.length)];
                span.style.left = `${Math.floor(Math.random() * columns) * fontSize}px`;
                span.style.animationDuration = `${Math.random() * 5 + 3}s`;
                span.style.animationDelay = `${Math.random() * 5}s`;
                matrix.appendChild(span);
            }
        }

        function createTransitionMatrix() {
            const matrix = document.querySelector('.matrix');
            const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';
            const fontSize = 16;
            const columns = Math.floor(window.innerWidth / fontSize);

            while (matrix.firstChild) {
                matrix.removeChild(matrix.firstChild);
            }

            for (let i = 0; i < 300; i++) { // Mantener el número de letras igual que antes
                const span = document.createElement('span');
                span.textContent = letters[Math.floor(Math.random() * letters.length)];
                span.style.left = `${Math.floor(Math.random() * columns) * fontSize}px`;
                span.style.animationDuration = `2s`; // Hacer la animación más lenta
                span.style.animationDelay = `${Math.random() * 1}s`; // Para asegurar que todas las letras cubran la pantalla
                matrix.appendChild(span);
            }

            // Agregar más letras durante la transición
            let additionalLetters = setInterval(() => {
                for (let i = 0; i < 50; i++) {
                    const span = document.createElement('span');
                    span.textContent = letters[Math.floor(Math.random() * letters.length)];
                    span.style.left = `${Math.floor(Math.random() * columns) * fontSize}px`;
                    span.style.animationDuration = `2s`;
                    span.style.animationDelay = `${Math.random() * 1}s`;
                    matrix.appendChild(span);
                }
            }, 500);

            // Detener la adición de letras después de la duración de la animación
            setTimeout(() => {
                clearInterval(additionalLetters);
            }, 2000);
        }

        createMatrix();
        setTimeout(createTransitionMatrix, 2000);
    </script>
</body>
</html>
